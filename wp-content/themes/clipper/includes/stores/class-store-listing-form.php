<?php
/**
 * Store Listing Form submodule
 *
 * @package Clipper\Stores
 * @author  AppThemes
 * @since   2.0.0
 */

/**
 * Form processing class
 */
class CLPR_Store_Listing_Form extends APP_Listing_Form {

	/**
	 * Retrieves core fields
	 *
	 * @return array An array of the fields parameters
	 */
	public function get_core_fields() {

		$fields = array(

			// 'Essential info'.
			array(
				'type'  => 'input_text',
				'id'    => 'new_store_name', // name.
				'props' => array(
					'required'    => 1,
					'label'       => '',
					'placeholder' => _x( 'New store name', 'placeholder', APP_TD ),
				),
			),
			array(
				'type'  => 'file',
				'id'    => 'clpr_store_image_id',
				'props' => array(
					'tip'         => __( 'Choose custom image for the store.', APP_TD ) . "&nbsp;" . __( 'Leave blank if you want use image generated by store URL.', APP_TD ),
					'required'    => 0,
					'label'       => __( 'Store Image', APP_TD ),
					'extensions'  => 'Image',
					'file_limit'  => 1,
					'embed_limit' => 0,
					'file_size'   => '',
				),
			),
			array(
				'type'  => 'url',
				'id'    => 'clpr_store_url',
				'props' => array(
					'required'    => 1,
					'label'       => '',
					'placeholder' => _x( 'New store URL', 'placeholder', APP_TD ),
				),
			),
			array(
				'type'  => 'textarea',
				'id'    => 'description',
				'props' => array(
					'required'    => 1,
					'label'       => __( 'Description', APP_TD ),
					'editor_type' => '',
				),
			),
		);

		return apply_filters( 'appthemes_core_fields', $fields, $this->listing->get_type() );
	}

	/**
	 * Processes listing form.
	 *
	 * @param int    $listing_id  Listing ID.
	 * @param string $action      Action nonce.
	 * @param string $name        Nonce name.
	 * @param array  $form_fields Form fields.
	 *
	 * @return int Processed listing ID
	 */
	public function process_form( $listing_id, $action, $name, $form_fields = array() ) {

		check_admin_referer( $action, $name );

		if ( empty( $form_fields ) ) {
			$form_fields = $this->get_form_fields( array(), array(), $listing_id );
		}

		$description = wp_list_filter( $form_fields, array( 'name' => 'description' ) );
		$description = array_shift( $description );

		if ( ! empty( $description ) && ! empty( $description['props']['editor_type'] ) ) {
			remove_filter( 'pre_term_description', 'wp_filter_kses' );
			remove_filter( 'term_description', 'wp_kses_data' );
		}

		return parent::process_form( $listing_id, $action, $name, $form_fields );
	}

}
